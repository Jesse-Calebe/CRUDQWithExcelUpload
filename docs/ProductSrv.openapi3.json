{
  "openapi": "3.0.2",
  "info": {
    "title": "Use @title: '...' on your CDS service to provide a meaningful title.",
    "description": "Use @Core.LongDescription: '...' on your CDS service to provide a meaningful description.",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Use @Core.Description: '...' on your CDS service to provide a meaningful short text.",
  "servers": [
    {
      "url": "/rest/ProductSrv"
    }
  ],
  "tags": [
    {
      "name": "Product"
    },
    {
      "name": "SingletonSet"
    },
    {
      "name": "Status"
    },
    {
      "name": "Uom"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET SingletonSet HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product": {
      "get": {
        "summary": "Retrieves a list of product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "productId",
                  "productId desc",
                  "name",
                  "name desc",
                  "weight",
                  "weight desc",
                  "uom_uom",
                  "uom_uom desc",
                  "status_status",
                  "status_status desc",
                  "singleton_id",
                  "singleton_id desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "productId",
                  "name",
                  "weight",
                  "uom_uom",
                  "status_status",
                  "singleton_id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "uom",
                  "status",
                  "singleton",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Product",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSrv.Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single product.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "New product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Product-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "productId",
                  "name",
                  "weight",
                  "uom_uom",
                  "status_status",
                  "singleton_id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "uom",
                  "status",
                  "singleton",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single product.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Product-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single product.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves draft administrative data of a product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes draft administrative data of a product.",
        "tags": [
          "Product"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes draft administrative data of a product.",
        "tags": [
          "Product"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/ProductSrv.draftPrepare": {
      "post": {
        "summary": "Invokes action draftPrepare",
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductSrv.Product"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: productId",
            "in": "path",
            "name": "productId",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 10
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves sibling entity of a product.",
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "productId",
                  "name",
                  "weight",
                  "uom_uom",
                  "status_status",
                  "singleton_id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "uom",
                  "status",
                  "singleton",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/singleton": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves singleton of a product.",
        "tags": [
          "Product",
          "SingletonSet"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved singleton",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/status": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves status of a product.",
        "tags": [
          "Product",
          "Status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Product(productId='{productId}',IsActiveEntity='{IsActiveEntity}')/uom": {
      "parameters": [
        {
          "description": "key: productId",
          "in": "path",
          "name": "productId",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 10
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves uom of a product.",
        "tags": [
          "Product",
          "Uom"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "uom",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved uom",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Uom"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SingletonSet": {
      "get": {
        "summary": "Retrieves a list of singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "id desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved singleton set",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of SingletonSet",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "requestBody": {
          "description": "New singleton set",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.SingletonSet-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created singleton set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: id",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 5
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved singleton set",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.SingletonSet-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: id",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 5
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves draft administrative data of a singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes draft administrative data of a singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes draft administrative data of a singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/ProductSrv.draftActivate": {
      "post": {
        "summary": "Invokes action draftActivate",
        "tags": [
          "SingletonSet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 5
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/ProductSrv.draftEdit": {
      "post": {
        "summary": "Invokes action draftEdit",
        "tags": [
          "SingletonSet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 5
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/ProductSrv.draftPrepare": {
      "post": {
        "summary": "Invokes action draftPrepare",
        "tags": [
          "SingletonSet"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: id",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 5
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: id",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 5
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves sibling entity of a singleton set.",
        "tags": [
          "SingletonSet"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "product",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.SingletonSet"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/SingletonSet(id='{id}',IsActiveEntity='{IsActiveEntity}')/product": {
      "parameters": [
        {
          "description": "key: id",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 5
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of product of a singleton set.",
        "tags": [
          "SingletonSet",
          "Product"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "productId",
                  "productId desc",
                  "name",
                  "name desc",
                  "weight",
                  "weight desc",
                  "uom_uom",
                  "uom_uom desc",
                  "status_status",
                  "status_status desc",
                  "singleton_id",
                  "singleton_id desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "productId",
                  "name",
                  "weight",
                  "uom_uom",
                  "status_status",
                  "singleton_id",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "uom",
                  "status",
                  "singleton",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Product",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSrv.Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single product of a singleton set.",
        "tags": [
          "SingletonSet",
          "Product"
        ],
        "requestBody": {
          "description": "New product",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Product-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Product"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Status": {
      "get": {
        "summary": "Retrieves a list of status.",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "status desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Status",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSrv.Status"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single status.",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "description": "New status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Status-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Status('{status}')": {
      "parameters": [
        {
          "description": "key: status",
          "in": "path",
          "name": "status",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 2
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single status.",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "status",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Status"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single status.",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Status-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single status.",
        "tags": [
          "Status"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Uom": {
      "get": {
        "summary": "Retrieves a list of uom.",
        "tags": [
          "Uom"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "uom",
                  "uom desc",
                  "description",
                  "description desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "uom",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved uom",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Uom",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductSrv.Uom"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single uom.",
        "tags": [
          "Uom"
        ],
        "requestBody": {
          "description": "New uom",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Uom-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created uom",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Uom"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Uom('{uom}')": {
      "parameters": [
        {
          "description": "key: uom",
          "in": "path",
          "name": "uom",
          "required": true,
          "schema": {
            "type": "string",
            "maxLength": 5
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single uom.",
        "tags": [
          "Uom"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "uom",
                  "description"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved uom",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSrv.Uom"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single uom.",
        "tags": [
          "Uom"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductSrv.Uom-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single uom.",
        "tags": [
          "Uom"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductSrv.DraftAdministrativeData": {
        "title": "DraftAdministrativeData",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductSrv.DraftAdministrativeData-create": {
        "title": "DraftAdministrativeData (for create)",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductSrv.DraftAdministrativeData-update": {
        "title": "DraftAdministrativeData (for update)",
        "type": "object",
        "properties": {
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductSrv.Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "productId": {
            "type": "string",
            "maxLength": 10
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "uom": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.Uom"
              }
            ],
            "nullable": true
          },
          "uom_uom": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.Status"
              }
            ],
            "nullable": true
          },
          "status_status": {
            "type": "string",
            "maxLength": 2,
            "nullable": true,
            "default": "01"
          },
          "singleton": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.SingletonSet"
              }
            ],
            "nullable": true
          },
          "singleton_id": {
            "type": "string",
            "maxLength": 5,
            "nullable": true,
            "default": "dummy"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.Product"
              }
            ],
            "nullable": true
          }
        }
      },
      "ProductSrv.Product-create": {
        "title": "Product (for create)",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "maxLength": 10
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "uom_uom": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "status_status": {
            "type": "string",
            "maxLength": 2,
            "nullable": true,
            "default": "01"
          },
          "singleton_id": {
            "type": "string",
            "maxLength": 5,
            "nullable": true,
            "default": "dummy"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "productId",
          "IsActiveEntity"
        ]
      },
      "ProductSrv.Product-update": {
        "title": "Product (for update)",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "weight": {
            "anyOf": [
              {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.001,
                "maximum": 9999999.999,
                "minimum": -9999999.999
              },
              {
                "type": "string"
              }
            ],
            "example": 0,
            "x-sap-precision": 10,
            "x-sap-scale": 3,
            "nullable": true
          },
          "uom_uom": {
            "type": "string",
            "maxLength": 5,
            "nullable": true
          },
          "status_status": {
            "type": "string",
            "maxLength": 2,
            "nullable": true,
            "default": "01"
          },
          "singleton_id": {
            "type": "string",
            "maxLength": 5,
            "nullable": true,
            "default": "dummy"
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "ProductSrv.SingletonSet": {
        "title": "SingletonSet",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 5
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSrv.Product"
            }
          },
          "product@count": {
            "$ref": "#/components/schemas/count"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.SingletonSet"
              }
            ],
            "nullable": true
          }
        }
      },
      "ProductSrv.SingletonSet-create": {
        "title": "SingletonSet (for create)",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 5
          },
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSrv.Product-create"
            }
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "id",
          "IsActiveEntity"
        ]
      },
      "ProductSrv.SingletonSet-update": {
        "title": "SingletonSet (for update)",
        "type": "object",
        "properties": {
          "product": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductSrv.Product-create"
            }
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductSrv.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "ProductSrv.Status": {
        "title": "Status",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "maxLength": 2
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        }
      },
      "ProductSrv.Status-create": {
        "title": "Status (for create)",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "maxLength": 2
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        },
        "required": [
          "status"
        ]
      },
      "ProductSrv.Status-update": {
        "title": "Status (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        }
      },
      "ProductSrv.Uom": {
        "title": "Uom",
        "type": "object",
        "properties": {
          "uom": {
            "type": "string",
            "maxLength": 5
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        }
      },
      "ProductSrv.Uom-create": {
        "title": "Uom (for create)",
        "type": "object",
        "properties": {
          "uom": {
            "type": "string",
            "maxLength": 5
          },
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        },
        "required": [
          "uom"
        ]
      },
      "ProductSrv.Uom-update": {
        "title": "Uom (for update)",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}